import tkinter as tk
from tkinter import messagebox, ttk

# Class qu·∫£n l√Ω giao di·ªán ng∆∞·ªùi d√πng
class QuanLyGiaoDien:
    def __init__(self, root, quan_ly_cai_dat):
        self.root = root
        self.quan_ly_cai_dat = quan_ly_cai_dat
        self.man_hinh_hien_tai = None
        self.board_buttons = []
        self.current_player_label = None
        self.score_x_label = None
        self.score_o_label = None
        self.status_label = None
        
        self.thiet_lap_style()
    
    def thiet_lap_style(self):
        """Thi·∫øt l·∫≠p m√†u s·∫Øc v√† font ch·ªØ"""
        if self.quan_ly_cai_dat.lay_cai_dat('theme') == 'dark':
            # Theme t·ªëi
            self.mau_sac = {
                'bg': '#2d2d2d',
                'fg': '#ffffff',
                'primary': '#4a90e2',
                'secondary': '#6c757d',
                'success': '#28a745',
                'danger': '#dc3545',
                'warning': '#ffc107',
                'info': '#17a2b8',
                'light': '#3d3d3d',
                'button_bg': '#4a4a4a'
            }
        else:
            # Theme s√°ng (m·∫∑c ƒë·ªãnh)
            self.mau_sac = {
                'bg': '#f0f2f5',
                'fg': '#2c3e50',
                'primary': '#4a90e2',
                'secondary': '#6c757d',
                'success': '#28a745',
                'danger': '#dc3545',
                'warning': '#ffc107',
                'info': '#17a2b8',
                'light': '#ffffff',
                'button_bg': '#ffffff'
            }
        
        # ƒê·∫∑t m√†u n·ªÅn cho c·ª≠a s·ªï
        self.root.configure(bg=self.mau_sac['bg'])
        
        # Font ch·ªØ
        self.font_chu = {
            'title': ('Arial', 24, 'bold'),
            'heading': ('Arial', 16, 'bold'),
            'button': ('Arial', 12, 'bold'),
            'text': ('Arial', 10),
            'cell': ('Arial', 20, 'bold')
        }
    
    def xoa_man_hinh(self):
        """X√≥a m√†n h√¨nh hi·ªán t·∫°i"""
        for widget in self.root.winfo_children():
            widget.destroy()
    
    def dieu_chinh_kich_thuoc_cua_so(self):
        """T·ª± ƒë·ªông ch·ªânh k√≠ch th∆∞·ªõc c·ª≠a s·ªï theo b√†n c·ªù"""
        kich_thuoc = self.quan_ly_cai_dat.lay_cai_dat('board_size')
        
        # K√≠ch th∆∞·ªõc c∆° b·∫£n
        width_co_ban = 600
        height_co_ban = 700
        
        # T√≠nh to√°n k√≠ch th∆∞·ªõc n√∫t
        kich_thuoc_nut = max(2, 8 - kich_thuoc // 2)
        pixel_moi_nut = kich_thuoc_nut * 12
        
        # T√≠nh k√≠ch th∆∞·ªõc c·∫ßn thi·∫øt
        width_ban_co = kich_thuoc * pixel_moi_nut + 50
        height_ban_co = kich_thuoc * (pixel_moi_nut // 2) + 300
        
        # K√≠ch th∆∞·ªõc c·ª≠a s·ªï m·ªõi
        width_moi = max(width_co_ban, width_ban_co + 100)
        height_moi = max(height_co_ban, height_ban_co + 200)
        
        # Kh√¥ng cho qu√° l·ªõn
        max_width = int(self.root.winfo_screenwidth() * 0.9)
        max_height = int(self.root.winfo_screenheight() * 0.9)
        
        width_moi = min(width_moi, max_width)
        height_moi = min(height_moi, max_height)
        
        self.root.geometry(f"{width_moi}x{height_moi}")
        
        # CƒÉn gi·ªØa c·ª≠a s·ªï
        self.root.update_idletasks()
        x = (self.root.winfo_screenwidth() // 2) - (width_moi // 2)
        y = (self.root.winfo_screenheight() // 2) - (height_moi // 2)
        self.root.geometry(f"{width_moi}x{height_moi}+{x}+{y}")
    
    def hien_menu(self, callbacks):
        """Hi·ªÉn th·ªã menu ch√≠nh"""
        self.xoa_man_hinh()
        self.man_hinh_hien_tai = 'menu'
        
        # ƒê·∫∑t l·∫°i k√≠ch th∆∞·ªõc cho menu
        self.root.geometry("600x700")
        
        # CƒÉn gi·ªØa c·ª≠a s·ªï
        self.root.update_idletasks()
        x = (self.root.winfo_screenwidth() // 2) - (600 // 2)
        y = (self.root.winfo_screenheight() // 2) - (700 // 2)
        self.root.geometry(f"600x700+{x}+{y}")
        
        # Ti√™u ƒë·ªÅ game
        tieu_de = tk.Label(
            self.root, 
            text="üéÆ GAME C·ªú CARO üéÆ",
            font=self.font_chu['title'],
            bg=self.mau_sac['bg'],
            fg=self.mau_sac['fg']
        )
        tieu_de.pack(pady=50)
        
        # Khung ch·ª©a c√°c n√∫t
        khung_nut = tk.Frame(self.root, bg=self.mau_sac['bg'])
        khung_nut.pack(pady=20)
        
        # Danh s√°ch c√°c n√∫t menu
        cac_nut = [
            ("üë• Ch∆°i v·ªõi ng∆∞·ªùi", callbacks['choi_voi_nguoi']),
            ("ü§ñ Ch∆°i v·ªõi m√°y", callbacks['choi_voi_may']),
            ("‚öôÔ∏è C√†i ƒë·∫∑t", callbacks['cai_dat']),
            ("‚ÑπÔ∏è H∆∞·ªõng d·∫´n", callbacks['huong_dan']),
            ("‚ùå Tho√°t", callbacks['thoat'])
        ]
        
        # T·∫°o t·ª´ng n√∫t
        for text, command in cac_nut:
            nut = tk.Button(
                khung_nut,
                text=text,
                font=self.font_chu['button'],
                bg=self.mau_sac['primary'],
                fg='white',
                width=20,
                height=2,
                relief='raised',
                bd=2,
                cursor='hand2',
                command=command
            )
            nut.pack(pady=10)
    
    def cap_nhat_hien_thi_nguoi_choi(self, nguoi_choi):
        """C·∫≠p nh·∫≠t hi·ªÉn th·ªã ng∆∞·ªùi ch∆°i hi·ªán t·∫°i"""
        if self.current_player_label:
            self.current_player_label.config(text=f"L∆∞·ª£t c·ªßa: {nguoi_choi}")
            if nguoi_choi == 'X':
                self.current_player_label.config(fg=self.mau_sac['danger'])
            else:
                self.current_player_label.config(fg=self.mau_sac['primary'])
    
    def cap_nhat_hien_thi_diem(self, diem_so, che_do_game):
        """C·∫≠p nh·∫≠t hi·ªÉn th·ªã ƒëi·ªÉm s·ªë"""
        if self.score_x_label:
            self.score_x_label.config(text=f"X: {diem_so['X']}")
        
        if self.score_o_label:
            ten_nguoi_o = "ü§ñ M√°y" if che_do_game == 'ai' else "O"
            self.score_o_label.config(text=f"{ten_nguoi_o}: {diem_so['O']}")
    
    def vo_hieu_hoa_tat_ca_nut(self):
        """V√¥ hi·ªáu h√≥a t·∫•t c·∫£ n√∫t tr√™n b√†n c·ªù"""
        kich_thuoc = self.quan_ly_cai_dat.lay_cai_dat('board_size')
        for hang in range(kich_thuoc):
            for cot in range(kich_thuoc):
                self.board_buttons[hang][cot].config(state='disabled')
    
    def lam_noi_bat_o_thang(self, cac_o):
        """L√†m n·ªïi b·∫≠t c√°c √¥ th·∫Øng"""
        for hang, cot in cac_o:
            self.board_buttons[hang][cot].config(bg='lightgreen')
