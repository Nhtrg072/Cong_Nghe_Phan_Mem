import tkinter as tk
from tkinter import messagebox

# Import c√°c class ƒë√£ t√°ch
from game_state import TrangThaiGame
from game_board import BanCo
from ai_player import AIPlayer
from ui_manager import QuanLyGiaoDien
from settings_manager import QuanLyCaiDat
from game_screen import ManHinhGame
from settings_screen import ManHinhCaiDat
from game_controller import GameController

# Class ch√≠nh ng·∫Øn g·ªçn
class GameCaro:
    def __init__(self):
        # Kh·ªüi t·∫°o c∆° b·∫£n
        self.root = tk.Tk()
        self.root.title("Game C·ªù Caro - OOP Structure")
        self.root.geometry("800x800")
        self.root.resizable(False, False)  # C·ªë ƒë·ªãnh k√≠ch th∆∞·ªõc
        
        # Kh·ªüi t·∫°o managers
        self.quan_ly_cai_dat = QuanLyCaiDat()
        self.quan_ly_ui = QuanLyGiaoDien(self.root, self.quan_ly_cai_dat)
        self.trang_thai_game = TrangThaiGame()
        
        # Kh·ªüi t·∫°o game components
        self.cap_nhat_game_components()
        
        # Kh·ªüi t·∫°o m√†n h√¨nh
        self.man_hinh_game = ManHinhGame(self.root, self.quan_ly_ui, self.lay_callbacks_game())
        self.man_hinh_cai_dat = ManHinhCaiDat(self.root, self.quan_ly_ui, self.lay_callbacks_cai_dat())
        
        # Hi·ªÉn th·ªã menu
        self.hien_menu()
    
    def cap_nhat_game_components(self):
        """C·∫≠p nh·∫≠t b√†n c·ªù, AI v√† controller"""
        kich_thuoc = self.quan_ly_cai_dat.lay_cai_dat('board_size')
        dieu_kien_thang = self.quan_ly_cai_dat.lay_cai_dat('win_condition')
        do_kho_ai = self.quan_ly_cai_dat.lay_cai_dat('ai_difficulty')
        
        self.ban_co = BanCo(kich_thuoc, dieu_kien_thang)
        self.ai_player = AIPlayer(do_kho_ai)
        self.game_controller = GameController(self.trang_thai_game, self.ban_co, 
                                            self.ai_player, self.quan_ly_ui, self.quan_ly_cai_dat)
    
    def hien_menu(self):
        """Hi·ªÉn th·ªã menu ch√≠nh"""
        callbacks = {
            'choi_voi_nguoi': lambda: self.bat_dau_game('human'),
            'choi_voi_may': lambda: self.bat_dau_game('ai'),
            'cai_dat': self.hien_cai_dat,
            'huong_dan': self.hien_huong_dan,
            'thoat': self.thoat_game
        }
        self.quan_ly_ui.hien_menu(callbacks)
    
    def lay_callbacks_game(self):
        """L·∫•y callbacks cho m√†n h√¨nh game"""
        return {
            've_menu': self.hien_menu,
            'cai_dat': self.hien_cai_dat,
            'nuoc_di': self.xu_ly_nuoc_di,
            'reset': self.reset_game,
            'game_moi': self.game_moi,
            'goi_y': self.game_controller.hien_goi_y,
            'hoan_tac': self.game_controller.hoan_tac_nuoc_di,
            'xu_ly_phim': self.xu_ly_phim_tat
        }
    
    def lay_callbacks_cai_dat(self):
        """L·∫•y callbacks cho m√†n h√¨nh c√†i ƒë·∫∑t"""
        return {
            've_menu': self.hien_menu,
            'luu_cai_dat': self.luu_cai_dat
        }
    
    def bat_dau_game(self, che_do):
        """B·∫Øt ƒë·∫ßu game"""
        self.quan_ly_cai_dat.dat_cai_dat('game_mode', che_do)
        self.trang_thai_game.khoi_tao_game_moi(self.quan_ly_cai_dat.lay_cai_dat('board_size'))
        self.man_hinh_game.hien_thi(self.trang_thai_game, self.quan_ly_cai_dat)
    
    def xu_ly_nuoc_di(self, hang, cot):
        """X·ª≠ l√Ω n∆∞·ªõc ƒëi"""
        can_goi_ai = self.game_controller.thuc_hien_nuoc_di(hang, cot)
        if can_goi_ai:
            self.root.after(500, self.game_controller.thuc_hien_nuoc_di_ai)
    
    def reset_game(self):
        """Reset game"""
        self.trang_thai_game.khoi_tao_game_moi(self.quan_ly_cai_dat.lay_cai_dat('board_size'))
        self.man_hinh_game.hien_thi(self.trang_thai_game, self.quan_ly_cai_dat)
        messagebox.showinfo("Reset", "Game ƒë√£ ƒë∆∞·ª£c reset!")
    
    def game_moi(self):
        """Game m·ªõi"""
        self.trang_thai_game.reset_diem_so()
        self.reset_game()
        messagebox.showinfo("Game m·ªõi", "B·∫Øt ƒë·∫ßu game m·ªõi!")
    
    def hien_cai_dat(self):
        """Hi·ªÉn th·ªã c√†i ƒë·∫∑t"""
        self.man_hinh_cai_dat.hien_thi(self.quan_ly_cai_dat)
    
    def luu_cai_dat(self, cai_dat_moi):
        """L∆∞u c√†i ƒë·∫∑t"""
        theme_cu = self.quan_ly_cai_dat.lay_cai_dat('theme')
        self.quan_ly_cai_dat.cap_nhat_cai_dat(cai_dat_moi)
        
        # C·∫≠p nh·∫≠t l·∫°i components
        self.cap_nhat_game_components()
        
        if theme_cu != self.quan_ly_cai_dat.lay_cai_dat('theme'):
            self.quan_ly_ui.thiet_lap_style()
            messagebox.showinfo("C√†i ƒë·∫∑t", "C√†i ƒë·∫∑t ƒë√£ ƒë∆∞·ª£c l∆∞u! Kh·ªüi ƒë·ªông l·∫°i ƒë·ªÉ √°p d·ª•ng theme m·ªõi.")
        else:
            messagebox.showinfo("C√†i ƒë·∫∑t", "C√†i ƒë·∫∑t ƒë√£ ƒë∆∞·ª£c l∆∞u!")
    
    def hien_huong_dan(self):
        """Hi·ªÉn th·ªã h∆∞·ªõng d·∫´n"""
        noi_dung = """
üéØ M·ª§C TI√äU:
ƒê·∫∑t c√°c qu√¢n c·ªù th√†nh m·ªôt h√†ng li√™n ti·∫øp ƒë·ªÉ th·∫Øng.

üéÆ C√ÅCH CH∆†I:
‚Ä¢ Click v√†o √¥ tr·ªëng ƒë·ªÉ ƒë·∫∑t qu√¢n
‚Ä¢ Ng∆∞·ªùi ch∆°i X lu√¥n ƒëi tr∆∞·ªõc
‚Ä¢ AI s·∫Ω t·ª± ƒë·ªông ƒëi sau b·∫°n

‚öôÔ∏è C√ÄI ƒê·∫∂T:
‚Ä¢ K√≠ch th∆∞·ªõc b√†n: 3x3 ƒë·∫øn 10x10
‚Ä¢ S·ªë qu√¢n th·∫Øng: 3-6 qu√¢n
‚Ä¢ ƒê·ªô kh√≥ AI: D·ªÖ, Trung b√¨nh, Kh√≥

‚å®Ô∏è PH√çM T·∫ÆT:
‚Ä¢ R: Ch∆°i l·∫°i
‚Ä¢ N: Game m·ªõi
‚Ä¢ H: G·ª£i √Ω (ch·ªâ v·ªõi AI)
‚Ä¢ U: Ho√†n t√°c
‚Ä¢ Q: Tho√°t

ü§ñ ƒê·ªò KH√ì AI:
‚Ä¢ D·ªÖ: ƒêi ng·∫´u nhi√™n
‚Ä¢ Trung b√¨nh: C√≥ chi·∫øn thu·∫≠t
‚Ä¢ Kh√≥: Thu·∫≠t to√°n th√¥ng minh
        """
        messagebox.showinfo("H∆∞·ªõng d·∫´n", noi_dung)
    
    def xu_ly_phim_tat(self, event):
        """X·ª≠ l√Ω ph√≠m t·∫Øt"""
        key = event.char.lower()
        
        if key == 'r' and self.quan_ly_ui.man_hinh_hien_tai == 'game':
            self.reset_game()
        elif key == 'n' and self.quan_ly_ui.man_hinh_hien_tai == 'game':
            self.game_moi()
        elif key == 'h' and self.quan_ly_ui.man_hinh_hien_tai == 'game':
            self.game_controller.hien_goi_y()
        elif key == 'u' and self.quan_ly_ui.man_hinh_hien_tai == 'game':
            self.game_controller.hoan_tac_nuoc_di()
        elif key == 'q':
            self.thoat_game()
    
    def thoat_game(self):
        """Tho√°t game"""
        if messagebox.askyesno("Tho√°t", "B·∫°n c√≥ ch·∫Øc mu·ªën tho√°t game?"):
            self.quan_ly_cai_dat.luu_cai_dat()
            self.root.quit()
    
    def chay_game(self):
        """Ch·∫°y game"""
        # CƒÉn gi·ªØa c·ª≠a s·ªï
        self.root.update_idletasks()
        x = (self.root.winfo_screenwidth() // 2) - (self.root.winfo_width() // 2)
        y = (self.root.winfo_screenheight() // 2) - (self.root.winfo_height() // 2)
        self.root.geometry(f"+{x}+{y}")
        
        self.root.protocol("WM_DELETE_WINDOW", self.thoat_game)
        self.root.mainloop()

# Ch·∫°y game
if __name__ == "__main__":
    game = GameCaro()
    game.chay_game()
