#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Game C·ªù Caro - Restructured OOP Version
C·∫•u tr√∫c theo y√™u c·∫ßu: main.py v·ªõi class GameCaro ƒëi·ªÅu khi·ªÉn t·ªïng th·ªÉ
"""

import tkinter as tk
from tkinter import messagebox
import sys
import os

# Import c√°c module theo c·∫•u tr√∫c m·ªõi
from game_state import TrangThaiGame
from game_board import BanCo
from ai_player import AIPlayer
from game_controller import GameController
from ui_manager import QuanLyGiaoDien
from game_screen import ManHinhGame
from settings_screen import ManHinhCaiDat
from settings_manager import QuanLyCaiDat

class GameCaro:
    """Class ch√≠nh ƒëi·ªÅu khi·ªÉn t·ªïng th·ªÉ to√†n b·ªô game, k·∫øt n·ªëi t·∫•t c·∫£ components"""
    
    def __init__(self):
        # Kh·ªüi t·∫°o c·ª≠a s·ªï ch√≠nh
        self.cua_so_chinh = tk.Tk()
        self.cua_so_chinh.title("Game C·ªù Caro - Advanced OOP")
        self.cua_so_chinh.resizable(False, False)
        
        # Kh·ªüi t·∫°o c√°c managers
        self.quan_ly_cai_dat = QuanLyCaiDat()
        self.quan_ly_ui = QuanLyGiaoDien(self.quan_ly_cai_dat.lay('theme'))
        
        # Kh·ªüi t·∫°o game components
        self.trang_thai_game = None
        self.ban_co_logic = None
        self.ai_player = None
        self.controller = None
        
        # Kh·ªüi t·∫°o screens
        self.man_hinh_game = None
        self.man_hinh_cai_dat = None
        
        # Tr·∫°ng th√°i hi·ªán t·∫°i
        self.man_hinh_hien_tai = 'menu'
        
        # Thi·∫øt l·∫≠p giao di·ªán v√† hi·ªÉn th·ªã menu
        self.thiet_lap_giao_dien()
        self.hien_thi_menu()
        
        # Thi·∫øt l·∫≠p s·ª± ki·ªán ƒë√≥ng c·ª≠a s·ªï
        self.cua_so_chinh.protocol("WM_DELETE_WINDOW", self.thoat_game)
    
    def thiet_lap_giao_dien(self):
        """Thi·∫øt l·∫≠p giao di·ªán c∆° b·∫£n"""
        # C·∫•u h√¨nh c·ª≠a s·ªï
        mau_sac = self.quan_ly_ui.lay_tat_ca_mau()
        self.cua_so_chinh.configure(bg=mau_sac['nen'])
        
        # CƒÉn gi·ªØa c·ª≠a s·ªï
        self.quan_ly_ui.can_giua_cua_so(self.cua_so_chinh)
        
        # Thi·∫øt l·∫≠p ph√≠m t·∫Øt to√†n c·ª•c
        self.cua_so_chinh.bind('<Key>', self.xu_ly_phim_tat_toan_cuc)
    
    def xoa_man_hinh(self):
        """X√≥a t·∫•t c·∫£ widget tr√™n m√†n h√¨nh"""
        for widget in self.cua_so_chinh.winfo_children():
            widget.destroy()
    
    # ===== MENU CH√çNH =====
    def hien_thi_menu(self):
        """Hi·ªÉn th·ªã menu ch√≠nh"""
        self.man_hinh_hien_tai = 'menu'
        self.xoa_man_hinh()
        
        # Ti√™u ƒë·ªÅ
        style_tieu_de = self.quan_ly_ui.tao_style_label('tieu_de')
        tieu_de = tk.Label(
            self.cua_so_chinh, 
            text="üéÆ GAME C·ªú CARO üéÆ",
            **style_tieu_de
        )
        tieu_de.pack(pady=50)
        
        # Frame ch·ª©a c√°c n√∫t menu
        style_frame = self.quan_ly_ui.tao_style_frame()
        button_frame = tk.Frame(self.cua_so_chinh, **style_frame)
        button_frame.pack(pady=20)
        
        # C√°c n√∫t menu
        cac_nut_menu = [
            ("üë• Ch∆°i v·ªõi ng∆∞·ªùi", lambda: self.bat_dau_game('human')),
            ("ü§ñ Ch∆°i v·ªõi m√°y", lambda: self.bat_dau_game('ai')),
            ("‚öôÔ∏è C√†i ƒë·∫∑t", self.hien_thi_cai_dat),
            ("‚ÑπÔ∏è H∆∞·ªõng d·∫´n", self.hien_thi_huong_dan),
            ("‚ùå Tho√°t", self.thoat_game)
        ]
        
        for text, command in cac_nut_menu:
            style_nut = self.quan_ly_ui.tao_style_nut('chinh')
            nut = tk.Button(
                button_frame,
                text=text,
                command=command,
                width=20,
                height=2,
                **style_nut
            )
            nut.pack(pady=10)
    
    # ===== GAME LOGIC =====
    def bat_dau_game(self, che_do):
        """B·∫Øt ƒë·∫ßu game v·ªõi ch·∫ø ƒë·ªô ƒë∆∞·ª£c ch·ªçn"""
        # C·∫≠p nh·∫≠t c√†i ƒë·∫∑t ch·∫ø ƒë·ªô game
        self.quan_ly_cai_dat.dat('che_do_game', che_do)
        
        # Kh·ªüi t·∫°o game components
        self.khoi_tao_game_components()
        
        # Hi·ªÉn th·ªã m√†n h√¨nh game
        self.hien_thi_man_hinh_game()
    
    def khoi_tao_game_components(self):
        """Kh·ªüi t·∫°o c√°c components c·ªßa game"""
        # T·∫°o tr·∫°ng th√°i game
        self.trang_thai_game = TrangThaiGame(
            kich_thuoc=self.quan_ly_cai_dat.lay('kich_thuoc_ban_co')
        )
        
        # T·∫°o logic b√†n c·ªù
        self.ban_co_logic = BanCo(
            kich_thuoc=self.quan_ly_cai_dat.lay('kich_thuoc_ban_co'),
            dieu_kien_thang=self.quan_ly_cai_dat.lay('dieu_kien_thang')
        )
        
        # T·∫°o AI player n·∫øu c·∫ßn
        if self.quan_ly_cai_dat.lay('che_do_game') == 'ai':
            self.ai_player = AIPlayer(
                do_kho=self.quan_ly_cai_dat.lay('do_kho_ai'),
                ky_hieu='O'
            )
        else:
            self.ai_player = None
        
        # T·∫°o controller
        self.controller = GameController(
            self.trang_thai_game,
            self.ban_co_logic,
            self.ai_player
        )
    
    def hien_thi_man_hinh_game(self):
        """Hi·ªÉn th·ªã m√†n h√¨nh ch∆°i game"""
        self.man_hinh_hien_tai = 'game'
        
        # T·∫°o m√†n h√¨nh game
        self.man_hinh_game = ManHinhGame(
            self.cua_so_chinh,
            self.quan_ly_ui,
            self.controller,
            self.quan_ly_cai_dat
        )
        
        # Thi·∫øt l·∫≠p callbacks
        self.man_hinh_game.ve_menu = self.hien_thi_menu
        self.man_hinh_game.mo_settings = self.hien_thi_cai_dat
        self.man_hinh_game.thoat_game = self.thoat_game
        
        # Hi·ªÉn th·ªã
        self.man_hinh_game.hien_thi(self.trang_thai_game)
    
    # ===== C√ÄI ƒê·∫∂T =====
    def hien_thi_cai_dat(self):
        """Hi·ªÉn th·ªã m√†n h√¨nh c√†i ƒë·∫∑t"""
        self.man_hinh_hien_tai = 'settings'
        
        # T·∫°o m√†n h√¨nh c√†i ƒë·∫∑t
        self.man_hinh_cai_dat = ManHinhCaiDat(
            self.cua_so_chinh,
            self.quan_ly_ui,
            self.quan_ly_cai_dat
        )
        
        # Thi·∫øt l·∫≠p callback
        self.man_hinh_cai_dat.quay_lai_menu = self.hien_thi_menu
        
        # Hi·ªÉn th·ªã
        self.man_hinh_cai_dat.hien_thi()
    
    # ===== H∆Ø·ªöNG D·∫™N =====
    def hien_thi_huong_dan(self):
        """Hi·ªÉn th·ªã h∆∞·ªõng d·∫´n ch∆°i game"""
        noi_dung_huong_dan = """
üéØ M·ª§C TI√äU:
ƒê·∫∑t c√°c qu√¢n c·ªù th√†nh m·ªôt h√†ng li√™n ti·∫øp ƒë·ªÉ th·∫Øng.

üéÆ C√ÅCH CH∆†I:
‚Ä¢ Click v√†o √¥ tr·ªëng ƒë·ªÉ ƒë·∫∑t qu√¢n
‚Ä¢ Ng∆∞·ªùi ch∆°i X lu√¥n ƒëi tr∆∞·ªõc
‚Ä¢ AI s·∫Ω t·ª± ƒë·ªông ƒëi sau b·∫°n

‚öôÔ∏è C√ÄI ƒê·∫∂T:
‚Ä¢ K√≠ch th∆∞·ªõc b√†n: 3x3 ƒë·∫øn 10x10
‚Ä¢ S·ªë qu√¢n th·∫Øng: 3-6 qu√¢n
‚Ä¢ ƒê·ªô kh√≥ AI: D·ªÖ, Trung b√¨nh, Kh√≥

‚å®Ô∏è PH√çM T·∫ÆT:
‚Ä¢ R: Ch∆°i l·∫°i
‚Ä¢ N: Game m·ªõi
‚Ä¢ H: G·ª£i √Ω (ch·ªâ v·ªõi AI)
‚Ä¢ U: Ho√†n t√°c
‚Ä¢ Q: Tho√°t

ü§ñ ƒê·ªò KH√ì AI:
‚Ä¢ D·ªÖ: ƒêi ng·∫´u nhi√™n
‚Ä¢ Trung b√¨nh: C√≥ chi·∫øn thu·∫≠t
‚Ä¢ Kh√≥: Thu·∫≠t to√°n th√¥ng minh

üé® THEME:
‚Ä¢ S√°ng: Giao di·ªán truy·ªÅn th·ªëng
‚Ä¢ T·ªëi: Giao di·ªán ƒë·∫≠m ch·∫•t game
        """
        messagebox.showinfo("H∆∞·ªõng d·∫´n", noi_dung_huong_dan)
    
    # ===== X·ª¨ L√ù PH√çM T·∫ÆT =====
    def xu_ly_phim_tat_toan_cuc(self, event):
        """X·ª≠ l√Ω ph√≠m t·∫Øt to√†n c·ª•c"""
        phim = event.char.lower()
        
        # Ph√≠m t·∫Øt chung
        if phim == 'q':
            self.thoat_game()
        elif phim == 'm' and self.man_hinh_hien_tai != 'menu':
            self.hien_thi_menu()
        elif phim == 's' and self.man_hinh_hien_tai != 'settings':
            self.hien_thi_cai_dat()
        
        # Chuy·ªÉn event cho m√†n h√¨nh game n·∫øu ƒëang ·ªü ƒë√≥
        if (self.man_hinh_hien_tai == 'game' and 
            hasattr(self.man_hinh_game, 'xu_ly_phim_tat')):
            self.man_hinh_game.xu_ly_phim_tat(event)
    
    # ===== THO√ÅT GAME =====
    def thoat_game(self):
        """Tho√°t game v√† l∆∞u c√†i ƒë·∫∑t"""
        if messagebox.askyesno("Tho√°t", "B·∫°n c√≥ ch·∫Øc mu·ªën tho√°t game?"):
            # L∆∞u c√†i ƒë·∫∑t tr∆∞·ªõc khi tho√°t
            self.quan_ly_cai_dat.luu_cai_dat()
            
            # ƒê√≥ng c·ª≠a s·ªï
            self.cua_so_chinh.quit()
            self.cua_so_chinh.destroy()
    
    # ===== CH·∫†Y GAME =====
    def chay_game(self):
        """Kh·ªüi ch·∫°y game"""
        try:
            # Thi·∫øt l·∫≠p focus ƒë·ªÉ nh·∫≠n ph√≠m t·∫Øt
            self.cua_so_chinh.focus_set()
            
            # B·∫Øt ƒë·∫ßu main loop
            self.cua_so_chinh.mainloop()
            
        except Exception as e:
            messagebox.showerror("L·ªói", f"C√≥ l·ªói x·∫£y ra: {e}")
            print(f"L·ªói: {e}")
            import traceback
            traceback.print_exc()

def main():
    """H√†m main ch·∫°y game"""
    try:
        # T·∫°o v√† ch·∫°y game
        game = GameCaro()
        game.chay_game()
        
    except Exception as e:
        print(f"L·ªói khi kh·ªüi ch·∫°y game: {e}")
        import traceback
        traceback.print_exc()

if __name__ == "__main__":
    main()
